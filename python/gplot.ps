%!PS-Adobe-2.0 EPSF-2.0
%%Title: gplot.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Nov 03 09:26:06 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (gplot.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (jpeck)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Nov 03 09:26:06 2010)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
938 448 M
63 0 V
5988 0 R
-63 0 V
stroke
854 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.004)]
] -46.7 MRshow
1.000 UL
LTb
938 1080 M
63 0 V
5988 0 R
-63 0 V
stroke
854 1080 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.003)]
] -46.7 MRshow
1.000 UL
LTb
938 1712 M
63 0 V
5988 0 R
-63 0 V
stroke
854 1712 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.002)]
] -46.7 MRshow
1.000 UL
LTb
938 2344 M
63 0 V
5988 0 R
-63 0 V
stroke
854 2344 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.001)]
] -46.7 MRshow
1.000 UL
LTb
938 2975 M
63 0 V
5988 0 R
-63 0 V
stroke
854 2975 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
938 3607 M
63 0 V
5988 0 R
-63 0 V
stroke
854 3607 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
938 4239 M
63 0 V
5988 0 R
-63 0 V
stroke
854 4239 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.002)]
] -46.7 MRshow
1.000 UL
LTb
938 4871 M
63 0 V
5988 0 R
-63 0 V
stroke
854 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.003)]
] -46.7 MRshow
1.000 UL
LTb
938 448 M
0 63 V
0 4360 R
0 -63 V
stroke
938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2451 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2451 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
3963 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3963 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
5476 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5476 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
6989 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6989 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
938 4871 N
938 448 L
6051 0 V
0 4423 V
-6051 0 V
Z stroke
LCb setrgbcolor
196 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Voltage)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3963 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Pot position)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
4520 1001 M
[ [(Helvetica) 140.0 0.0 true true 0 (0V common-mode)]
] -46.7 MRshow
LT0
938 2641 Pls
968 2631 Pls
999 2627 Pls
1029 2618 Pls
1059 2624 Pls
1089 2621 Pls
1120 2624 Pls
1150 2627 Pls
1180 2624 Pls
1210 2618 Pls
1241 2618 Pls
1271 2624 Pls
1301 2615 Pls
1331 2627 Pls
1362 2618 Pls
1392 2615 Pls
1422 2611 Pls
1452 2615 Pls
1483 2611 Pls
1513 2608 Pls
1543 2618 Pls
1573 2615 Pls
1604 2611 Pls
1634 2618 Pls
1664 2595 Pls
1694 2608 Pls
1725 2608 Pls
1755 2611 Pls
1785 2605 Pls
1815 2618 Pls
1846 2611 Pls
1876 2605 Pls
1906 2615 Pls
1936 2601 Pls
1967 2605 Pls
1997 2608 Pls
2027 2598 Pls
2057 2605 Pls
2088 2608 Pls
2118 2605 Pls
2148 2608 Pls
2178 2615 Pls
2209 2611 Pls
2239 2618 Pls
2269 2605 Pls
2299 2605 Pls
2330 2611 Pls
2360 2605 Pls
2390 2618 Pls
2420 2615 Pls
2451 2605 Pls
2481 2611 Pls
2511 2615 Pls
2542 2601 Pls
2572 2605 Pls
2602 2601 Pls
2632 2601 Pls
2663 2611 Pls
2693 2608 Pls
2723 2618 Pls
2753 2611 Pls
2784 2595 Pls
2814 2605 Pls
2844 2615 Pls
2874 2601 Pls
2905 2611 Pls
2935 2598 Pls
2965 2611 Pls
2995 2611 Pls
3026 2605 Pls
3056 2608 Pls
3086 2601 Pls
3116 2615 Pls
3147 2615 Pls
3177 2605 Pls
3207 2611 Pls
3237 2608 Pls
3268 2608 Pls
3298 2598 Pls
3328 2605 Pls
3358 2608 Pls
3389 2611 Pls
3419 2608 Pls
3449 2598 Pls
3479 2615 Pls
3510 2608 Pls
3540 2598 Pls
3570 2608 Pls
3600 2605 Pls
3631 2608 Pls
3661 2608 Pls
3691 2611 Pls
3721 2595 Pls
3752 2601 Pls
3782 2611 Pls
3812 2598 Pls
3842 2611 Pls
3873 2605 Pls
3903 2601 Pls
3933 2605 Pls
3963 2608 Pls
3994 2601 Pls
4024 2608 Pls
4054 2605 Pls
4085 2611 Pls
4115 2595 Pls
4145 2615 Pls
4175 2591 Pls
4206 2615 Pls
4236 2591 Pls
4266 2615 Pls
4296 2595 Pls
4327 2615 Pls
4357 2595 Pls
4387 2605 Pls
4417 2598 Pls
4448 2618 Pls
4478 2585 Pls
4508 2608 Pls
4538 2598 Pls
4569 2608 Pls
4599 2591 Pls
4629 2601 Pls
4659 2591 Pls
4690 2611 Pls
4720 2598 Pls
4750 2595 Pls
4780 2605 Pls
4811 2595 Pls
4841 2608 Pls
4871 2608 Pls
4901 2591 Pls
4932 2601 Pls
4962 2601 Pls
4992 2601 Pls
5022 2601 Pls
5053 2605 Pls
5083 2598 Pls
5113 2608 Pls
5143 2598 Pls
5174 2591 Pls
5204 2608 Pls
5234 2598 Pls
5264 2601 Pls
5295 2605 Pls
5325 2605 Pls
5355 2595 Pls
5385 2605 Pls
5416 2598 Pls
5446 2595 Pls
5476 2608 Pls
5507 2585 Pls
5537 2601 Pls
5567 2598 Pls
5597 2601 Pls
5628 2601 Pls
5658 2608 Pls
5688 2611 Pls
5718 2595 Pls
5749 2601 Pls
5779 2601 Pls
5809 2605 Pls
5839 2595 Pls
5870 2598 Pls
5900 2595 Pls
5930 2598 Pls
5960 2608 Pls
5991 2608 Pls
6021 2595 Pls
6051 2601 Pls
6081 2595 Pls
6112 2588 Pls
6142 2605 Pls
6172 2598 Pls
6202 2598 Pls
6233 2601 Pls
6263 2591 Pls
6293 2601 Pls
6323 2595 Pls
6354 2588 Pls
6384 2601 Pls
6414 2595 Pls
6444 2608 Pls
6475 2605 Pls
6505 2601 Pls
6535 2605 Pls
6565 2595 Pls
6596 2591 Pls
6626 2601 Pls
6656 2595 Pls
6686 2588 Pls
6717 2605 Pls
6747 2598 Pls
6777 2601 Pls
6807 2598 Pls
6838 2598 Pls
6868 2605 Pls
6898 2601 Pls
6928 2605 Pls
6959 2608 Pls
4803 1001 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
4520 861 M
[ [(Helvetica) 140.0 0.0 true true 0 (+10V common-mode)]
] -46.7 MRshow
LT1
6989 658 Crs
6959 691 Crs
6928 744 Crs
6898 787 Crs
6868 826 Crs
6838 865 Crs
6807 914 Crs
6777 944 Crs
6747 990 Crs
6717 1039 Crs
6686 1072 Crs
6656 1115 Crs
6626 1167 Crs
6596 1207 Crs
6565 1259 Crs
6535 1298 Crs
6505 1334 Crs
6475 1381 Crs
6444 1417 Crs
6414 1459 Crs
6384 1502 Crs
6354 1538 Crs
6323 1587 Crs
6293 1623 Crs
6263 1679 Crs
6233 1716 Crs
6202 1741 Crs
6172 1794 Crs
6142 1834 Crs
6112 1882 Crs
6081 1906 Crs
6051 1955 Crs
6021 2007 Crs
5991 2040 Crs
5960 2090 Crs
5930 2122 Crs
5900 2175 Crs
5870 2208 Crs
5839 2241 Crs
5809 2290 Crs
5779 2329 Crs
5749 2375 Crs
5718 2404 Crs
5688 2447 Crs
5658 2493 Crs
5628 2532 Crs
5597 2585 Crs
5567 2615 Crs
5537 2647 Crs
5507 2693 Crs
5476 2723 Crs
5446 2785 Crs
5416 2811 Crs
5385 2851 Crs
5355 2903 Crs
5325 2932 Crs
5295 2969 Crs
5264 3011 Crs
5234 3051 Crs
5204 3090 Crs
5174 3140 Crs
5143 3162 Crs
5113 3222 Crs
5083 3238 Crs
5053 3303 Crs
5022 3310 Crs
4992 3379 Crs
4962 3399 Crs
4932 3454 Crs
4901 3474 Crs
4871 3533 Crs
4841 3559 Crs
4811 3605 Crs
4780 3625 Crs
4750 3681 Crs
4720 3707 Crs
4690 3767 Crs
4659 3783 Crs
4629 3839 Crs
4599 3868 Crs
4569 3911 Crs
4538 3930 Crs
4508 3990 Crs
4478 4012 Crs
4448 4055 Crs
4417 4098 Crs
4387 4137 Crs
4357 4170 Crs
4327 4223 Crs
4296 4252 Crs
4266 4278 Crs
4236 4314 Crs
4206 4357 Crs
4175 4383 Crs
4145 4410 Crs
4115 4449 Crs
4085 4472 Crs
4054 4485 Crs
4024 4501 Crs
3994 4498 Crs
3963 4492 Crs
3933 4475 Crs
3903 4443 Crs
3873 4422 Crs
3842 4383 Crs
3812 4347 Crs
3782 4311 Crs
3752 4268 Crs
3721 4256 Crs
3691 4193 Crs
3661 4180 Crs
3631 4130 Crs
3600 4105 Crs
3570 4048 Crs
3540 4022 Crs
3510 3973 Crs
3479 3950 Crs
3449 3907 Crs
3419 3858 Crs
3389 3832 Crs
3358 3783 Crs
3328 3756 Crs
3298 3714 Crs
3268 3674 Crs
3237 3632 Crs
3207 3589 Crs
3177 3563 Crs
3147 3517 Crs
3116 3481 Crs
3086 3438 Crs
3056 3409 Crs
3026 3372 Crs
2995 3333 Crs
2965 3284 Crs
2935 3238 Crs
2905 3212 Crs
2874 3166 Crs
2844 3133 Crs
2814 3083 Crs
2784 3041 Crs
2753 3018 Crs
2723 2975 Crs
2693 2936 Crs
2663 2896 Crs
2632 2841 Crs
2602 2818 Crs
2572 2772 Crs
2542 2729 Crs
2511 2693 Crs
2481 2651 Crs
2451 2621 Crs
2420 2585 Crs
2390 2532 Crs
2360 2496 Crs
2330 2454 Crs
2299 2411 Crs
2269 2375 Crs
2239 2335 Crs
2209 2286 Crs
2178 2253 Crs
2148 2214 Crs
2118 2165 Crs
2088 2112 Crs
2057 2083 Crs
2027 2037 Crs
1997 1991 Crs
1967 1961 Crs
1936 1922 Crs
1906 1882 Crs
1876 1843 Crs
1846 1801 Crs
1815 1752 Crs
1785 1712 Crs
1755 1683 Crs
1725 1633 Crs
1694 1574 Crs
1664 1551 Crs
1634 1502 Crs
1604 1463 Crs
1573 1420 Crs
1543 1387 Crs
1513 1341 Crs
1483 1292 Crs
1452 1266 Crs
1422 1213 Crs
1392 1158 Crs
1362 1134 Crs
1331 1092 Crs
1301 1039 Crs
1271 1007 Crs
1241 974 Crs
1210 918 Crs
1180 885 Crs
1150 836 Crs
1120 793 Crs
1089 751 Crs
1059 718 Crs
1029 675 Crs
999 622 Crs
968 633 Crs
4803 861 Crs
% End plot #2
% Begin plot #3
1.000 UL
LT2
LCb setrgbcolor
4520 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (-80dB positive limit)]
] -46.7 MRshow
LT2
4604 721 M
399 0 V
938 2921 M
6051 0 V
% End plot #3
% Begin plot #4
stroke
LT3
LCb setrgbcolor
4520 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (-80dB negative limit)]
] -46.7 MRshow
LT3
4604 581 M
399 0 V
938 2289 M
6051 0 V
% End plot #4
stroke
LTb
938 4871 N
938 448 L
6051 0 V
0 4423 V
-6051 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
